<?xml version="1.0"?>
<launch>

    <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}]: ${node}: ${message}"/>

    <!-- Parameters and Arguments -->
    <arg name="name"            /> <!-- Name of the vehicle being launched -->   
    <arg name="config_package_path"  /> <!-- Name of the package where the configuration files are stored -->
    <arg name="folder"              default="simulation" />  <!-- Name of the folder for the configuration files --> 
    <arg name="namespace"           default="false" />

    <arg name="kalman_filter"       default="true" />  
    <arg name="rosbridge"           default="true" />
    <arg name="address"             default="0.0.0.0" />
    <arg name="port"                default="8080" />

    <arg name="record_bag"          default="false" />
    <arg name="prefix" 			    default="$(arg name)" />
    <arg name="bags_folder"         default="$(env ROS_BAG_FOLDER)/ROSData"	/>

    <group ns="abyssal">
        <!-- Vehicle Specific Config File -->
        <arg name="dollar" value="$" />
        <rosparam command="load" file="$(arg dollar)$(arg config_package_path))/config/$(arg folder)/$(arg name)/abyssal.yaml" />

        <!-- Launch Nodes that are common to all vehicles -->

        <!-- filters: sensor fusion -->
        <group if="$(arg kalman_filter)">
            <node pkg="oceantech_filter_abyssal" type="filter_node.py" name="kalman_filter" respawn="true" output="screen" />
        </group>

        <!-- Rosbridge to expose the topics as JSON for abyssal tool to receive -->
        <group if="$(arg rosbridge)">
            <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" > 
                <arg name="address" value="$(arg address)"/>
                <arg name="port" value="$(arg port)"/>
            </include>
        </group>

        <!-- Record only the output that is used by abyssal (the estimated pose of the vehicle given by the ship) -->
        <group if="$(arg record_bag)">
            <node pkg="rosbag" type="record" name="record_medusa" args=" -o $(arg bags_folder)/$(arg prefix)_ -e '/hrov/state' "/>
        </group>

    </group>
</launch>